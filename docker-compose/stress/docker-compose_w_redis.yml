version: '3.8'
services:
  pmt:
    image: prom/prometheus
    container_name: pmt
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ../../prometheus:/etc/prometheus
      - ../../outputs/prometheus:/prometheus
    healthcheck:
      test: ["CMD", "wget", "http://localhost:9090", "-O", "health_wget"]
      interval: 2s
      timeout: 2s
      retries: 5
  red:
    container_name: red
    build:
      context: .
      dockerfile_inline: |
        FROM redis:7.2.3
        EXPOSE 6379
        ENTRYPOINT nohup bash -c "redis-server --appendonly yes" & sleep 1s \
          && cat /init-data/redis.init | redis-cli --pipe \
          && redis-cli save \
          && redis-cli shutdown \
          && redis-server
    volumes:
      - type: bind
        source: ../../db
        target: /init-data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 2s
      timeout: 2s
      retries: 5
  app:
    image: ${appntag}
    container_name: app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/quote/11"]
      interval: 5s
      timeout: 4s
      retries: 6
    depends_on:
      pmt:
        condition: service_healthy
      red:
        condition: service_healthy
    environment:
      - SPRING_APPLICATION_NAME=${spring_app_name}
      - SPRING_THREADS_VIRTUAL_ENABLED=${vthreads}
      - SPRING_DATA_REDIS_URL=redis://red:6379
    deploy:
      resources:
        limits:
          cpus: '${cpus}'
          memory: 1G
  jmt:
    image: justb4/jmeter
    container_name: jmt
    depends_on:
      app:
        condition: service_healthy
    volumes: 
      - ../../:/mapped_dir
    command: -JDELAY=${delay} -JRAMP_UP=${ramp_up} -JDURATION=${duration} -JTHREADS=${clients} -Jjmeter.reportgenerator.overall_granularity=${report_granurality} -n -t /mapped_dir/JMeter_test_plan.jmx -l /mapped_dir/${workspace}/JMeter_test_plan.jtl -j /mapped_dir/${workspace}/JMeter_test_plan.log -e -o /mapped_dir/${workspace}/report