version: '3.8'
services:
  pmt:
    image: prom/prometheus
    container_name: pmt
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ../../prometheus:/etc/prometheus
      - ../../outputs/prometheus:/prometheus
    healthcheck:
      test: ["CMD", "wget", "http://localhost:9090", "-O", "health_wget"]
      interval: 2s
      timeout: 2s
      retries: 5
  pdb:
    image: postgres:14.1-alpine
    container_name: pdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes: 
      - ../../db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 5
  app:
    image: ${appntag}
    container_name: app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/quote/11"]
      interval: 5s
      timeout: 4s
      retries: 6
    depends_on:
      pmt:
        condition: service_healthy
      pdb:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://pdb:5432/postgres
      - SPRING_R2DBC_URL=r2dbc:postgresql://pdb:5432/postgres
    deploy:
      resources:
        limits:
          cpus: '${cpus}'
          memory: 1G
  jmt:
    image: justb4/jmeter
    container_name: jmt
    depends_on:
      app:
        condition: service_healthy
    volumes: 
      - ../../:/mapped_dir
    command: -JDELAY=${delay} -JRAMP_UP=${ramp_up} -JDURATION=${duration} -JTHREADS=${clients} -Jjmeter.reportgenerator.overall_granularity=${report_granurality} -n -t /mapped_dir/JMeter_test_plan.jmx -l /mapped_dir/${workspace}/JMeter_test_plan.jtl -j /mapped_dir/${workspace}/JMeter_test_plan.log -e -o /mapped_dir/${workspace}/report